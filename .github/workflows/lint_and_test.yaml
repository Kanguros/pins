name: List and Test

on:
    push:
        branches:
            - main
    pull_request:
        branches:
            - "*"

jobs:
    test:
        name: Run Tests and Linters
        strategy:
            matrix:
                python-version:
                    - "3.9"
                    - "3.10"
                    - "3.11"
                os:
                    - ubuntu-latest
                    - macos-latest
                    - windows-latest
        runs-on: ${{ matrix.os }}
        steps:
            - name: Check out
              uses: actions/checkout@v3

            - name: Set up Python ${{ matrix.python-version }}
              uses: actions/setup-python@v5
              with:
                  python-version: ${{ matrix.python-version }}

            - name: Cache Poetry
              uses: actions/cache@v4
              with:
                  path: |
                      .venv
                      ~/.cache/pypoetry
                  key: ${{ runner.os }}-poetry-${{ matrix.python-version }}-${{ hashFiles('poetry.lock') }}

            - name: Install poetry
              uses: abatilo/actions-poetry@v4

            - name: Configure poetry
              run: |
                  poetry config virtualenvs.create true --local
                  poetry config virtualenvs.in-project true --local

            - name: Install dependencies
              run: poetry install --no-interaction --with=dev

            - name: Run pre-commit
              run: poetry run pre-commit run --all-files

    publish:
        name: Build and Publish
        if: github.event_name == 'release'
        runs-on: ubuntu-latest
        steps:
            - name: Check out repository
              uses: actions/checkout@v3

            - name: Set up Python for Publishing
              uses: actions/setup-python@v5
              with:
                  python-version: 3.11

            - name: Install poetry
              uses: abatilo/actions-poetry@v4

            - name: Configure poetry
              run: |
                  poetry config virtualenvs.create true --local
                  poetry config virtualenvs.in-project true --local

            - name: Build the package
              run: poetry build
